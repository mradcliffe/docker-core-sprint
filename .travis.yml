sudo: required

language: generic

env:
  - DOCKER_COMPOSE_VERSION=1.19.0

services:
  - docker

before_install:
  - git submodule update --init --recursive

install:
  - docker-compose up -d

script:
  - |
    docker-compose ps -q | xargs docker inspect -f '{{ .State.ExitCode }}' | while read CODE ; do
      if [ "$CODE" == "1" ]; then
        echo "-1"
      fi
    done

after_script:
  - docker-compose down

before_deploy:
  # Prepare Drupal.
  - ${TRAVIS_BUILD_DIR}/scripts/prepare_drupal.sh

  # Get the tagged release.
  - export RELEASE_DIR="docker-core-sprint"
  - export RELEASE_MACOS="/tmp/docker-core-sprint-macos-${TRAVIS_BRANCH}.zip"
  - export RELEASE_WIN="/tmp/docker-core-sprint-windows-${TRAVIS_BRANCH}.zip"
  - export RELEASE_TOOLBOX="/tmp/docker-core-sprint-toolbox-${TRAVIS_BRANCH}.zip"
  - export RELEASE_LINUX="/tmp/docker-core-sprint-linux-${TRAVIS_BRANCH}.zip"
  - export DL_DIR="/tmp/docker-downloads"
  - mkdir -vp "/tmp/${RELEASE_DIR}"

  # Copies miscellaneous files.
  - RELEASE_DIR=/tmp/${RELEASE_DIR} TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR} ${TRAVIS_BUILD_DIR}/scripts/copy_files.sh

  # Downloads dependencies.
  - RELEASE_DIR=/tmp/${RELEASE_DIR} TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR} DL_DIR=${DL_DIR} ${TRAVIS_BUILD_DIR}/scripts/get_packages.sh

  # Saves images to tarball inside release directory.
  - cd "/tmp/${RELEASE_DIR}"
  - IMAGES="wodby/adminer:4.3-1.1.0 wodby/drupal-apache:2.4-1.0.2 briangilbert/cloud9-alpine:20180318 linuxserver/thelounge:94 mailhog/mailhog:v1.0.0 wodby/mariadb:10.2-3.0.2 mradcliffe2/docker-drupal-php:core-0.4 traefik:1.6.0-rc4-alpine"
  - docker image save ${IMAGES} -o "/tmp/${RELEASE_DIR}/images.tar"
  - ${TRAVIS_BUILD_DIR}/scripts/travis_wait -l 1200 "xz --verbose /tmp/${RELEASE_DIR}/images.tar"

  # Create release. Why is travis not doing zip -x correctly?
  - cd /tmp
  - mv "${DL_DIR}/MacOS" "${RELEASE_DIR}/"
  - zip -q -r "${RELEASE_MACOS}" "${RELEASE_DIR}"
  - rm -rf "${RELEASE_DIR}/MacOS"
  - mv "${DL_DIR}/Windows" "${RELEASE_DIR}/"
  - zip -q -r "${RELEASE_WIN}" "${RELEASE_DIR}"
  - rm -rf "${RELEASE_DIR}/Windows"
  - mv "${DL_DIR}/Toolbox" "${RELEASE_DIR}/Windows"
  - zip -q -r "${RELEASE_TOOLBOX}" "${RELEASE_DIR}"
  - rm -rf "${RELEASE_DIR}/Windows"
  - mv "${DL_DIR}/Linux" "${RELEASE_DIR}/"
  - zip -q -r "${RELEASE_LINUX}" "${RELEASE_DIR}"

deploy:
  provider: releases
  api_key:
    secure: "bn2qpZqR5kt67aOwDSoJaHCN1G9lJYOE8Dy4kzG41VJmQYAaf0oGdq8AP9IxgaTDotGjsYhwLir4S1BzAWqlDWB63ZKZm0X0K56RZPwpLHevRUOz8sjZxzKa4VW2X3guBvdajOIMg3JKaa2OlWCPlzZ22VoCH3Go/XLe8bgtoDmonev6dJxSg8rPgFuFH5j636mcwgFKPBZaeDArO5dVlsW4O5Z69fwl1oLet+VOnd8Qkog2Tlle93jbF1EoQSsvjGKmPqkoscxyYNpqXLqVqQ+T/c0eN3OGieFUH2+7wDHqNszVWAdwoek0BRihrFmi+ycB5mmpx5YVjuyS6fzqCPVq9BlONjhxdJN0JBaUgSjkdrFKCwCK4zDT0WDCJEqMkp75A3FPS67EugiTbHqBjEujgtqR1Xy3JHr+w5ZUuTu5bYEMb8yidy27MZBJn6FY2wAZN1+8p/jYSjhSMYTtGGnhB3VeBUSnybZQ03+3ht+ngomzLut/hyNvy6ki4i/0W8Quan3e0F3mNsdkbsw3yGh+OpPXi8spW15EL/eK/Dd/H0EezRePaJ61w+GpTEQ+I991eKNmfiRwQttb96XeIqUhFGc2xwlOQqyDcNgTYg3moxTjUxRzPCkixQpMecCREt5s2XOzK8nuqxAVCK8W+ZHd+RR6l0+y/xLGFOzOEkg="
  file:
    - "${RELEASE_MACOS}"
    - "${RELEASE_WIN}"
    - "${RELEASE_TOOLBOX}"
    - "${RELEASE_LINUX}"
  skip_cleanup: true
  overwrite: true
  on:
    tags: true

